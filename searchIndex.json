[
{
		"title": "Goodbye to Longtail Music",
		"date":"Tue Oct 08 2024 00:16:07 GMT+0000 (Coordinated Universal Time)",
		"url":"/personal/blog-posts/goodbye-to-longtail-music/",
		"content": "A few weeks ago I shut down Longtail Music and I wanted to spend some time thinking about it and writing my thoughts up on it along with talking about what I'm going to focus on next.\nIt had a run longer than many projects that show up on the internet, but everything ends, so I wanted to give a bit of a postmortem to talk about what I sent out to do, what it did, and why I think things never worked out.\nI originally built Longtail Music as a spinoff from my time with The Bat Player, an internet radio client for the TV. I thought if The Bat Player was a client for people who already love internet radio and know what they want to listen to, then I want to build something on the web for people to discover internet radio for the first time and discover a station they would love.\nWhile this is the polished marketing elevator pitch it encompasses a lot of things that need to go right in order to pull it off. Too many things. So let's talk about them.\nAs a refresher, here's what Longtail Music was.\n\nA discovery engine for people to find an internet radio station they would enjoy.\nAn internet radio client that displayed details about the artist including images and album information. A smaller version of the player was also embeddable on external web sites.\nA way to listen to previews and keep record of previously played tracks.\nProvided links for each track so you can listen to it again on Spotify, Apple Music, YouTube, etc.\nA crowd funding platform to allow stations to collect funds to help keep the station online.\nA CMS for stations to post messages, update show schedules, announce special events, and contact fans.\nA marketing interface for featuring the stations on social networks.\nAn analytics platform showing station owners the listening statistics and the most popular tracks.\n\nThat's a lot of functionality.\nIf that's everything I had to build, then just as many things were somewhat out of my control. In order to run successfully, a handful of things had to work out.\nFor Longtail Music to exist in any way the following needed to be true:\n\nThe stations have to be good.\n\nThis is obvious, but it's also not a given. There are so many internet radio stations out there, and very few of them are worthy of featuring in front of people.\nMost internet radio stations fall into the category of &quot;Variety and misc&quot;. An unappealing random grab bag of tracks. It shows no personality, no target demographic, and no way for a potential listener to really dig in and know what is being offered. Even the tag lines of these stations are all generic &quot;From old to new, hard to soft, we have the best that music has to offer&quot; or bragging about not sticking within a single genre. So when I started Longtail Music I had the task ahead of me of trying to find stations that had a real personality and a clear goal. A station that said things like &quot;Promoting Soca and Calypso music to the world&quot; was something that would catch my eye where &quot;The best of 80s, 90s and today&quot; would not.\nPlus I'll be honest: I favored stations with fewer ads. Ads are the worst. Stations don't even make money off the ads, it just goes to whatever hosting company the server runs on.\n\nThe stations had to realize I'm just trying to help.\n\nI'd email these stations individually. And that is more difficult than it sounds as it would sometimes take a lot of digging to find out how to contact a station owner. And if I got a response at all it would usually be along the lines of them assuming I'm scamming them, looking to sell them something, or are out to get them in some way. I emailed hundreds of station owners and most of the responses were things like &quot;I've been doing this for 15 years and I don't need you&quot; or something equally negative. Some stations even had concerns being listed next to another station on a web site because they thought they'd &quot;lose listeners&quot; and saw other stations as &quot;competition&quot; and didn't want to take part.\n\nThe stations had to be willing to minimally use the platform.\n\nFor each station I onboarded I would manually and painstakingly find their logo, audio streams, descriptions and misc station info and input it into the Longtail platform so the station owners didn't have to do anything to start using it. I would ask if they ever changed their audio stream to make sure they change it on the platform, update their logo if they ever change it and update their schedule so people who drop by know what shows and content they're featuring. This didn't really happen. Many stations would get a new audio stream, not tell me, and not update it on Longtail, making their station completely unavailable. So if I notice this happening I'd go digging for the new one, update it for them, and fix it. This showed that the minimum effort of even making sure people can listen to their station was not being made by anyone other than me.\nBut in general without stations that were actually using the platform nothing else mattered. And that leads me to the next item.\n\nThe stations on the platform have to stay online.\n\nInternet radio stations do not make money. Each station owner operates at a loss and if they're lucky they'll have some donations to help each month. But realistically the number of listeners most stations have can't make enough money even if everyone donated. Because of this stations disappear, often. There's only so much money people will spend on a hobby, and they just give up. Out of pocket expenses, few listeners and increasing hassle with licensing leads to stations just being turned off.\n\nI needed to get potential listeners to the site and discover these stations.\n\nEven if the stations were on board and engaged that's only half the equation. My goal was to spend some highly targeted dollars on advertising for stations on the platform in order to acquire new listeners. Find people who like rap and send them to the rap stations, get country people to the country stations. It's a self-identifying demographic and as far as targeting goes this seemed straightforward.\nWhat I wanted to provide for stations.\n\nStay in business: I wanted to give stations money. For free.\n\nSince stations need money to stay online I wanted to help on that front. A part of Longtail was having a place that encouraged listeners to support the station via donations. Donations were featured on the station's page and listeners could keep track of how much they've donated over time. Much like Patreon, OpenCollective, or other crowdfunding platforms, I wanted to build a mutually beneficial ecosystem where it's super easy to donate to a station, and in turn the station gets to keep running and playing music for the listener. I thought stations would really like this, since stations are asking for money ALL OF THE TIME. They ignored it completely.\n\nGet more listeners: I wanted to provide promotion of stations. For free.\n\nThe whole point is to have people discover new music via internet radio stations, so acquiring users is important. Plus In order to get donations you need listeners. So you need to spend money to make money. I wanted to spend marketing dollars, on behalf of the station, for free, to acquire them more users. No catch, I just wanted more people to listen to their stations by routing them through Longtail Music. But I wasn't willing to do this unless a handful of stations were at least minimally active on the platform.\n\nA modern and more interactive listening experience: I wanted to build something that the &quot;Facebook Generation&quot; felt at home with.\n\nMost internet radio stations have web sites that look like they were built 15 years ago. Some of them were. If you want new listeners then not only do the first impressions matter, but you have to keep them coming back. People are used to newsfeeds, social posts and continued engagement. Some of my favorite internet radio stations have live DJ sets, and with a single click of a button on Longtail a station can notify fans of the station via email that a live set is about to begin and it features that station on the home page so everyone knows a special event is occurring. Stations never used this this feature, even when it notified people and featured the station on their behalf.\nWhat I wanted to provide for listeners\n\nA simple way to discover an internet radio station to enjoy.\n\nBy clicking on genres you're into, or connecting your Facebook or Spotify accounts Longtail surfaced you a list of stations that were compatible with things you already listen to. It was fast and easy to go from nothing to listening.\n\nThe ability to share your thoughts about songs and the station.\n\nYou could like and dislike songs, sharing with others what you thought about what was currently playing on the station. You could also leave messages for other listeners and for the DJs. These likes, dislikes and messages would then get emailed to station owners at the end of the week so they knew what people thought of the content on the station.\n\nShowing you weren't alone, you saw other people, in real-time, tune in and react to songs.\n\nAs people tuned into the station, liked, disliked, or commented on songs, you would see it in real time. This created a communial listening experience. It wasn't just you listening by yourself, the world was listening with you.\n\nA listening history so you can go back to that song you really enjoyed, and find it on your streaming service of choice.\n\nYou could look at your history to find that song you heard earlier, and quickly jump to it in Spotify or other services, to listen to it again or add it to your personal playlists.\nWhat went wrong\n\nNot enough station engagement.\n\nThis has been mentioned a couple times, but building something for somebody who doesn't want it isn't going to get you anywhere. It's still unclear why this happened, however. Do they just not want the help? Do they not want to have to remember to use another web site every day? Do they think things are &quot;good enough as it is&quot;? Are they afraid of being listed next to other stations and think it's &quot;competition&quot;?\n\nNot enough listeners.\n\nThis is pretty common with anything new, you just don't have users yet. But for me I wasn't willing on putting a ton of money into user acquisition until I felt confident that the stations would engage with them once they got there, and this never happened. And with the promotion that did happen, my guess is people think &quot;Spotify is good enough&quot; and really aren't looking for another way to discover new music, so they're not jumping to press play on some random web site.\n\nZero stations asked for donations and zero users donated.\n\nBy &quot;asked for donations&quot; I didn't mean they didn't enable the feature, as it was on by default, but stations weren't telling listeners to donate via Longtail, or making posts saying they were accepting donations. Therefore users didn't donate.\n\nOnboarding each station was a chore.\n\nIt took way too much effort to find, communicate with, and convince each station to take part. I felt like a sales person who wasn't making money. I even used a sales pipeline tool to keep track of who I emailed and what the status of each conversation was. It's possible I spent just as much time emailing as I did with the development of the product.\nThe only way I'd do this differently is a fundamental change on how I think of the platform. Add the station first without talking to them, and if they want to be involved later, then great, otherwise just leave it. Maybe even just bulk import stations early on, regardless if they suck or not. But I felt strongly about creating a relationship with each quality station, and that I was willing to put effort into it, even though it didn't pay off.\n\nAside from a cut of donations, there's no way to make money.\n\nSimple as that. But I wasn't trying to make money or build a business. I just wanted people to hear some cool songs. But down the road it would matter, since it always does.\nWhat worked\n\nThe idea was sound.\n\nA few stations were active on Longtail Music, and seeing them post their schedule, send weekly updates to listeners, and keep their information active really showed me that the idea of the platform, when executed, was a really good one.\n\nPutting a fresh coat of paint on internet radio does make internet radio more accessible.\n\nMaking people who feel at home on Facebook feel comfortable tuning into internet radio does modernize something that hasn't changed a lot for years.\n\nI hired a designer and the end product came off pretty nice.\n\nI made the choice upfront to have somebody design the site for me, and that was a good idea, though it slowed me down to have somebody else involved. And while I had never built in React before, I built a pretty complex, multifaceted social platform with billing features. It would have been easier if I built an iOS app or something, since that's my focus, the React app ran great for years. I focused on performance, speed, and ease of use, and it worked.\nWhat I learned\n\nSome people don't want your help &amp; you can't make people care.\n\nEven if you're just trying to do something helpful, for free, that doesn't mean that people want what you have. A lot of these station owners have been doing it for many years and don't want anybody else involved. Even if they need money, even if they want more listeners, even if their web page is crap. It's their thing and they don't want you or anybody else involved.\nI wanted to forge partnerships with people who care deeply about music, internet radio and sharing the worlds of both. But making partnerships is hard, and you can't force somebody to care as much as you about your thing. I cared about their stations, and I wanted to see them all thrive, but nobody cared that I cared.\n\nBeing a platform for other people's content is a difficult road.\n\nSometimes I think it would have been easier to create 100 of my own internet radio stations from scratch, operate them, and then use those stations on Longtail Music. But I wanted to be a part of something bigger, and help people who really love music. But anytime you're trying to surface the work and content of others you're at the mercy of other people. Luckily I didn't have to pay to have this content on Longtail (unlike running a music streaming service like Rdio or a TV streaming service), so it didn't become a financial burden, but it's still a challenge when you don't control everything. You rely on the people generating that content to be involved.\n\nBuilding a product for the worst case scenario buys you time and lowers expectations.\n\nI built Longtail Music knowing on day one there would be zero people and very little action on the platform. So I made sure that every little thing gets surfaced in a stream and keeps the content fresh. It was constantly showing the recent songs played by each station, and as each person tuned into a station it would show off that the station got a new listener. Even at its most quiet the site had a feed of content that was always fresh, interesting and showed you what has been going on while you were away. You could even discover new music just by browsing the home page and seeing stations that you might be interested in or cover art that catches you attention. There were previews of recent songs, definitions of genres you might not be familiar with, and a way to discover stations via your Facebook and Spotify accounts. I didn't build it to look good after hundreds of people started using it, I built it to attract somebody when nothing was going on and didn't require activity, and that was a good call.\nIn a similar vein, even though I talk about the lack of engagement by stations, I built Longtail Music to require as little usage by station owners as possible. The platform would feature a station when it plays a song for the first time and keep a record of artists that are often played on the station so station owners don't have to do anything for it to be obvious what type of content they're playing. It allowed the page for a station to always be up to date and featuring things without any human being involved.\n\nDon't waste time building a user accounts system unless you need to.\n\nUnless the value of the product relies on accounts to exist, it's a waste of time. Longtail Music had user accounts where you could view your listening history, donation history, mark songs as favorites, like/dislike, etc. None of this was necessary. You could do most everything without a user account (on purpose), so I shouldn't have spent time building them in the first place. That's not where the value of the product was. It would have been a nice v2 addition if there were enough listeners and stations were active enough where they were generating content that should be pushed to individual users.\n\nIn general the scope of the product was too big.\n\nI built it all, and it had everything I wanted, so it's not like the large scope had any real downsides other than it took longer to build. But, like the user accounts, I probably shouldn't have started with the donations platform or any of the special features for station owners. All of the dashboards and special station-owner features were probably never even looked at. While seeing graphs about who's tuning in and when and what songs are popular are very cool, it's not terribly useful early on, and really not useful if the station owner isn't even logging in.\n\nDon't spend time on all the dumb &quot;social stuff&quot;.\n\nI spent a lot of time working on integration with Twitter and Facebook. Both from the automated posting standpoint, and using Facebook and Spotify data to match you up with stations via your social listening history. I also spent a bunch of time on server-rendered pages for every part of the site so OpenGraph tags would render for anybody who linked to it. None of this was required or helpful.\n\nAll the real-time interactive user stuff wasn't very useful with so few users.\n\nWhile it was super cool to see, in real-time, users around you react to songs and tune into stations, it wasn't very useful, and it took a lot of work to build.\nWhat's next?\nNothing new, actually. I'm currently working on an update for The Bat Player for AppleTV and I look forward to getting that out in 2020. It's been a long time since I've worked on it, and it needs some updates.\nUnlike social web sites where you require some critical mass before you can call yourself a success, a useful application is a success for each person who installs it and uses it.\nSo I'm going &quot;back to my roots&quot;, if you will, and making sure the client for existing internet radio lovers is in good shape.\nAs far as the future, I haven't given up on the idea of introducing more people to internet radio and making it more accessible and modern. I just don't know how to do it. I'll keep thinking. In the mean time I'll put on some good tunes and listen to internet radio somewhere else.",
		"tags": [ "note"]
},

{
		"title": "Owncast's 4th Anniversary",
		"date":"Tue Oct 08 2024 00:16:07 GMT+0000 (Coordinated Universal Time)",
		"url":"/",
		"content": "May 23rd, 2024 marks the 4th anniversary of the first commit of Owncast, aptly titled: “WIP”.\nWIP\nIt was a bit before that when I actually started working on it in earnest, but not that far before. I remember duct taping a proof of concept together, opening my laptop's web port to the public internet, messaging somebody and asking “Could you open this URL in VLC or QuickTime or something?”. Since there was no web interface or player, I just wanted to see if video would play for somebody over the internet. When I was told it worked, I went from asking “I wonder if this is possible” to knowing it was possible.\nWhat specifically was happening four years ago?\nFor fun, I took a look at what the first month of Owncast commits looked like, and I don't remember things moving so fast. At that time, it already:\n\nHad native support for serving video via S3 compatible providers.\nThere were two additional contributors apart from me.\nChat had a fair bit of functionality.\nVideo transcoding was completely customizable.\nIt had persistent viewer statistics.\nDocumentation existed, including a quickstart guide.\nA build script and Dockerfile allowed for relatively easy building.\nYou could customize your page content with Markdown.\n\nHere are some other things that were going on at that time that never made it to where we are now:\n\nIt had native support for serving video via IPFS.\nThe web interface was built with Vue + Tailwind.\nYour chat username color was determined by a color hash of your username itself.\nChat had user avatars.\nChat showed embeds when links were shared, including images.\n\nWhere I started is not where it's been\nIt's remarkable how fast things move at first on any kind of project, and then as it starts to take shape it slows down and becomes a bit more methodical. Once the core functionality is built and it “works”, then you have to think about what's next. I suppose Owncast could have stopped right there. But I wanted it to be even easier to use, and more customizable. The more people who started using it, the more feedback I'd get, I started to get a picture of the long-term direction of the project and its features. And that direction is still what we're going from today. I wouldn't blame you if you thought I didn't listen to your suggestions, but I promise that's not true. The specific thing you request might not happen, but the spirit of what you're asking for heavily influences the trajectory of the project, and can turn into something that's useful for a wider user base.\nFour years ago, Owncast to me, was a free and open source, self-hosted live video server. And since people who live stream also often enjoy having chat, it would be useful to bundle in a little optional minimal chat side feature as well. But the focus was always the video. It's funny how much time and attention has gone into web interfaces (three entirely different implementations!) and chat over these years, when that has nothing to do with opening VLC and playing back a video stream. It's still a balancing act to this day, since some people care very, very much about chat, social features, the public directory, and interactivity. Others aren't concerned with those at all.\nWhat's up?\nIt's never a good time, but I'm looking at the backend codebase that began four years ago. As with anything that was started very small, and you build on top of it long enough, there's a point where at least some changes need to be made. Primarily because some of the things that are on our roadmap simply aren't possible with how the backend is architected. So while it's a messy undertaking, I think it's a valuable one, and it's happening now, so the really cool stuff can continue to get built after that.\nThank You\nThank you for the four-year journey. Your patience, your kindness, your contributions, your feedback, your encouragement, your donations, and for sharing your Owncast-powered live streams with me. Every so often I look at a screen full of those streams and I can't believe I had some small part in helping you build them. It continues to mean the world to me that you let me be involved.\nI'm still excited about Owncast every day. I can't say there hasn't been periods of burnout, and doubt. And if I didn't have an opportunity to see you out there using Owncast, maybe some of those periods would have been the end of it. But all of you keep it alive. At the end of the day, Owncast only exists because you use it. Everything else is an implementation detail.\nHere's to another four, five, ten years when Owncast will still be a “WIP”.",
		"tags": [ "note","owncast","gardenEntry"]
},

{
		"title": "Owncast-plans",
		"date":"Tue Oct 08 2024 00:16:07 GMT+0000 (Coordinated Universal Time)",
		"url":"/personal/blog-posts/owncast-plans/",
		"content": "While I try to keep a public roadmap, and keep a reasonable plan for Owncast I rarely have an opportunity to gush about features I’m looking forward to building. So I thought I’d write a quick blog post to share some of my personal thoughts about the my vision of Owncast from a high level.\nOwncast has been going through a large frontend refactor over the past year. And this wasn’t done lightly. It was done because I strongly felt if I wanted to build the features I had envisioned I wasn’t going to get there with the current frontend architecture, capabilities and tooling. So once this ships, I can get back to building features again! I’m really looking forward to that.\nAdmittedly I have some backend infrastructure refactoring planned once the frontend ships, but I do expect that to be more straightforward.\nSo what are these features?\nThe first big one I’m looking forward to are scheduled streams. The ability to say “I stream at 7:30 every Tuesday” or “This Friday I have an event at 6pm”. It will be a really nice thing to have on the Owncast stream page itself, so when you visit a stream that’s offline it tells you when you might want to come back. But that’s not the most interesting thing. People will be able to subscribe to a calendar so they have this schedule available to them wherever they are, so the real fans are always up to date. Additionally I can propagate this scheduled data to the Fediverse, updating the server’s profile info to include the next stream info, and inform followers that a stream is coming up soon. It’s all about informing people via different ways that something they might care about is coming up. I’m super excited about adding this functionality and I think it’ll benefit streamers and viewers alike.\nAnother feature I’m looking forward to is something I call “mini directories”. Something that people have asked for is to be able to run their own Owncast directories. The thought is that some communities and groups would like to be able to run multiple Owncast instances and have a way to link them all together. And while I’ve always thought that would be interesting, I’ve never been able to justify starting yet another rather large standalone software project that needs to be built, documented, supported, updated, etc for just a very small number of people. It’s not as simple as open sourcing the current Owncast directory site for many reasons.\nSo the solution I’m looking at is essentially every Owncast server to be a mini directory. Via ActivityPub (the standardized protocol that powers the Fediverse), each Owncast server will “Follow” other servers, and then the servers would federate between each other things like stream status (live/offline), schedule, and more. They could even list non-Owncast instances in their directory, as long as they are on the Fediverse. But of course they wouldn’t have all the additional federated info unless the remote server sent the required ActivityPub data. This means you could add PeerTube channels in your Owncast mini directory if you wanted to.\nAnd because things like stream state will be federated between Owncast instances, you could essentially mimic a Twitch-style “raid” because once your stream ends it’ll know what other streams are currently live, and can recommend your viewers to check them out.\nCool, right? This will build upon the power of ActivityPub and shared, standardized specs. I hope this will expand some of the things we do with decentralized, federated data. In theory any Fediverse service could send the correct activities to Owncast and share state to show up in this directory (as long as the Owncast instance has explicitly followed the remote account, of course).\nAnd while I could go on and on about ideas, I’ll briefly mention one more big one. A category of features I put under “replays”. I explicitly call them “replays” because that’s the point, for a viewer to be able to re-play part or whole of a stream.\nThe plan is to start with clips. And while that’s technically more challenging, with more UI and requirements from my side, I believe it has the most value. I think being able to share highlights of a stream will help grow people’s viewership more than entire streams, at first.\nThe entire replay project will be large, with a lot of design and UI requirements that admittedly I’m worried about. As I’ve blogged about in the past I’ve had a near impossible time getting design help, and it’s by far the skill set I have the hardest time with. So it’s going to be a long journey to get to where I’m trying to get to. But I’ll cross that bridge when I get to it.\nCan’t wait to build this stuff. I hope some of you join me!",
		"tags": [ "note","owncast"]
}
]